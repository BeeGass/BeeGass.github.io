I"/<p><span>[</span></p>

<p>]&lt;/span&gt;</p>

<p>I have looked through a decent amount of posts, blogs, and documentation and I have found that very few posts truly share a updated version of how KaTeX can be implemented into jekyll, specifically on github pages. Before I get into my quick explanation of how to do this I would like to redirect you to the <a href="https://codewrites.me/jekyll/katex/blog/2020/08/26/use-katex-gh-pages/">blog</a> post I read which I believe does a good job at explaining the process. My hope is to add to this tutorial and to walk you through in detail how to implement KaTeX yourself.</p>

<h2 id="the-gist-of-it">The Gist Of It</h2>

<p>There are a couple of major components here, there is your jekyll website, there is the Kramdown (the parser that interprets Markdown and other things into html), there is MathJax (the engine that compiles LaTeX notation into in-text images) and there is KaTeX (this is why we are here). The idea is that github pages and jekyll are very particular about which engine it runs. Not only can you not switch your math engine, but MathJax is the only available engine that will work with github pages. Fortunately, we can still use MathJax to parse the markdown into html, however we are going to have intercept the Latex notation and have KaTeX parse our code before it is rendered.</p>

<h4 id="step-1-make-sure-you-have-the-correct-engine">Step 1: Make Sure You Have The Correct Engine</h4>

<p>Within your <code class="language-plaintext highlighter-rouge">config.yml</code> please make sure you are using both Kramdown as your markdown parser as well as explicitly labeling your math engine. This should look like this.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>    <span class="na">markdown</span><span class="pi">:</span> <span class="s">kramdown</span>
    <span class="na">kramdown</span><span class="pi">:</span>
        <span class="na">math_engine</span><span class="pi">:</span> <span class="s">mathjax</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="step-2-setting-the-katex-script-and-style-sheet">Step 2: Setting the KaTeX Script and Style Sheet</h4>

<p>As previously mentioned we are waiting for MathJax to compile the markdown of our post which we then have KaTeX intercept and be rendered as Katex. Luckily, implementing KaTeX is simple but its very important to ensure correct placement. Input the following code after the place in the where you know that your {{ content }} has been rendered. I personally put this in the footer of my HTML folder associated with the template I was using, i.e. the template for blog posts, but as long as you ensure its after the markdown has been rendered you should be okay.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">href=</span><span class="s">"https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.css"</span> <span class="na">integrity=</span><span class="s">"sha384-AfEj0r4/OFrOo5t7NnNe46zW/tFgW6x/bCJG8FqQCEo3+Aro6EYUG4+cU+KJWu/X"</span> <span class="na">crossorigin=</span><span class="s">"anonymous"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;script </span><span class="na">defer</span> <span class="na">src=</span><span class="s">"https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.js"</span> <span class="na">integrity=</span><span class="s">"sha384-g7c+Jr9ZivxKLnZTDUhnkOnsh30B4H0rpLUpJ4jAIKs4fnJI+sEnkvrMWph2EDg4"</span> <span class="na">crossorigin=</span><span class="s">"anonymous"</span><span class="nt">&gt;&lt;/script&gt;</span>
    <span class="nt">&lt;script </span><span class="na">defer</span> <span class="na">src=</span><span class="s">"https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/contrib/auto-render.min.js"</span> <span class="na">integrity=</span><span class="s">"sha384-mll67QQFJfxn0IYznZYonOWZ644AWYC+Pt2cHqMaRhXVrursRwvLnLaebdGIlYNa"</span> <span class="na">crossorigin=</span><span class="s">"anonymous"</span>
    <span class="na">onload=</span><span class="s">"renderMathInElement(document.body);"</span><span class="nt">&gt;&lt;/script&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="optional-step-3-render-only-when-necessary">(Optional) Step 3: Render Only When Necessary</h4>

<p>The use of KaTeX can quickly become cumbersome for when we have a large amount of KaTeX to render or many different posts. To prevent KaTeX from attempting to interpret text that may not be there I would highly recommend wrapping your previously implemented script and styling links in liquid conditionals. The way I did this looks like this. This, however, does mean you will have to ensure the liquid tag of setting <code class="language-plaintext highlighter-rouge">hasmath: "true"</code> within your YAML for any markdown post you wish to have KaTeX be applied to.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre>
    <span class="nt">&lt;footer&gt;</span>
        {% if page.hasmath %}
            <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">href=</span><span class="s">"https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.css"</span> <span class="na">integrity=</span><span class="s">"sha384-AfEj0r4/OFrOo5t7NnNe46zW/tFgW6x/bCJG8FqQCEo3+Aro6EYUG4+cU+KJWu/X"</span> <span class="na">crossorigin=</span><span class="s">"anonymous"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;script </span><span class="na">defer</span> <span class="na">src=</span><span class="s">"https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.js"</span> <span class="na">integrity=</span><span class="s">"sha384-g7c+Jr9ZivxKLnZTDUhnkOnsh30B4H0rpLUpJ4jAIKs4fnJI+sEnkvrMWph2EDg4"</span> <span class="na">crossorigin=</span><span class="s">"anonymous"</span><span class="nt">&gt;&lt;/script&gt;</span>
            <span class="nt">&lt;script </span><span class="na">defer</span> <span class="na">src=</span><span class="s">"https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/contrib/auto-render.min.js"</span> <span class="na">integrity=</span><span class="s">"sha384-mll67QQFJfxn0IYznZYonOWZ644AWYC+Pt2cHqMaRhXVrursRwvLnLaebdGIlYNa"</span> <span class="na">crossorigin=</span><span class="s">"anonymous"</span> <span class="na">onload=</span><span class="s">"renderMathInElement(document.body);"</span><span class="nt">&gt;&lt;/script&gt;</span>
        {% endif %}
    <span class="nt">&lt;/footer&gt;</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<p>Here is some proof it works</p>

<p>\[\frac{d}{dx}\left( \int_{0}^{x} f(u)\,du\right)=f(x)\]</p>

<p>I hope this helps.</p>

<h2 id="comments-section">Comments Section</h2>

<p>If this post didnâ€™t help, I was overly vague, or you need assistance please do not shy away from commenting below.</p>
:ET